Text file that summarizes best results:

--------------------------------------
perturbVec_7_31_9
    parameter dist  == 0.004878134425028
    prediction dist == 0.757001146311154

perturbVec =

    1.0000
    0.8805
    1.0118
    0.7841
    0.9104
    0.9501
    0.8226
    0.8903
    0.9870
    0.8950
    0.8352
    0.6874
    0.6420
    1.0716
    0.7778
    0.6444
    0.9196
    0.8470
    0.9276
    0.8522
    0.7232
    0.7470
    1.0073
    0.9409
    0.8312
    0.8869
    0.7969
    0.8391
    0.6577
    0.8566

--------------------------------------

Thoughts and things to work on:

--> The issue with the random forest algorithm is that it cannot predict
    any parameter particularly well. As a result, it chooses values
    close to 1.0 (the mean) for each variable. To get more variability,
    we could constrain that 3 or so parameters are set to extreme
    values. We would want to pick GOOD extreme values for each of the
    "3 or so" parameters. So we could take a model in which prediction
    distance is good and has extreme values. And then use random forest
    to estimate the remaining parameters.

